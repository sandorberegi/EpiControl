% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Epi_MPC_run_wd.R
\name{Epi_MPC_run_wd}
\alias{Epi_MPC_run_wd}
\title{Simulate Epidemic Dynamics with Model Predictive Control}
\usage{
Epi_MPC_run_wd(
  episimdata,
  epi_par,
  noise_par,
  actions,
  pred_days,
  n_ens = 100,
  start_day = 1,
  ndays = nrow(episimdata),
  R_est_wind = 5,
  pathogen = 1,
  susceptibles = 1,
  delay = 0,
  ur = 0,
  r_dir = 1,
  N = 1e+06
)
}
\arguments{
\item{episimdata}{A data frame containing simulation data. It should include columns such as
\code{"C"} (cases), \code{"I"} (infected individuals), \code{"Re"} (effective reproduction number),
\code{"S"} (susceptible individuals), \code{"Deaths"}, and \code{"Lambda"} total infectiousness.}

\item{epi_par}{A data frame containing epidemiological parameters for various pathogens. It should
have the following columns: \code{"R0"} (basic reproduction number), \code{"gen_time"}
(generation time), \code{"gen_time_var"} (variance of generation time), \code{"CFR"}
(case fatality rate), \code{"mortality_mean"} (mean mortality delay), and \code{"mortality_var"} (mortality delay variance).}

\item{noise_par}{A data frame containing noise parameters for under-reporting and reporting delays:
\itemize{
  \item \code{"repd_mean"}: Mean of the reporting delay.
  \item \code{"del_disp"}: Dispersion parameter for the reporting delay distribution.
  \item \code{"ur_mean"}: Mean for the under-reporting rate.
  \item \code{"ur_beta_a"}: Alpha parameter of the Beta distribution for under-reporting.
}}

\item{actions}{A data frame containing control actions. It should include columns like \code{"R_coeff"}.}

\item{pred_days}{An integer specifying the number of days to predict ahead in reward calculation.}

\item{n_ens}{An integer specifying the number of ensemble runs for expected reward calculation. Defaults to \code{100}.}

\item{start_day}{An integer specifying the start day of the simulation. Defaults to \code{1}.}

\item{ndays}{An integer specifying the total number of simulation days. Defaults to the number of rows in \code{episimdata}.}

\item{R_est_wind}{An integer specifying the window size for reproduction number estimation. Defaults to \code{5}.}

\item{pathogen}{An integer or string identifying the pathogen to extract corresponding parameters. Defaults to \code{1}.}

\item{susceptibles}{A binary value (\code{0} or \code{1}) indicating whether to update the number of susceptibles. Defaults to \code{1}.}

\item{delay}{A binary value (\code{0} or \code{1}) indicating whether to simulate reporting delays. Defaults to \code{0}.}

\item{ur}{A binary value (\code{0} or \code{1}) indicating whether to simulate under-reporting. Defaults to \code{0}.}

\item{r_dir}{An integer specifying the reproduction number adjustments:
\itemize{
  \item \code{1} for direct \code{Re}.
  \item \code{2} for logistic adjustments.
  \item \code{0} for using the generation time distribution.
}}

\item{N}{A numeric value representing the total population size. Defaults to \code{1e6}.}
}
\value{
A data frame containing updated simulation data with computed reproduction numbers,
estimated policies, daily infection incidents, cases, deaths, and other epidemic metrics.
}
\description{
This function simulates an epidemic under model predictive control (MPC) using pre-defined parameters.
It dynamically evaluates actions to maximize expected rewards and updates epidemic states accordingly.
}
\details{
The function employs a model predictive control strategy where actions are evaluated periodically
(based on a refresh interval, \code{rf}). Expected rewards are computed using the \code{\link{Epi_pred_wd}} function
over a specified prediction horizon, and the optimal action is selected. The simulation incorporates
effects of under-reporting, reporting delays, and susceptible depletion based on the provided parameters.
}
\examples{
# Example epidemiological data
episimdata <- data.frame(C = c(0, 10), I = c(5, 8), Re = c(1.5, NA), S = c(1000, 990), Deaths = c(0, 1))
epi_par <- data.frame(
  R0 = 2.5, gen_time = 5, gen_time_var = 1,
  CFR = 0.02, mortality_mean = 14, mortality_var = 2
)
noise_par <- data.frame(
  repd_mean = 2, del_disp = 1.5, ur_mean = 0.8, ur_beta_a = 2
)
actions <- data.frame(R_coeff = c(0.9, 1.1))
updated_data <- Epi_MPC_run_wd(
  episimdata = episimdata, epi_par = epi_par, noise_par = noise_par,
  actions = actions, pred_days = 10, n_ens = 50, start_day = 1,
  ndays = 20, R_est_wind = 5, pathogen = 1, susceptibles = 1,
  delay = 0, ur = 0, r_dir = 1, N = 1e6
)

}
